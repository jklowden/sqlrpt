.\" 
.\" Copyright 2017 James K. Lowden. 
.\" 
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.
.Dd 11 February 2017
.Dt SQLRPT 1
.Os
.Sh NAME
.Nm sqlrpt
.Nd Render SQLite query as groff table 
.Sh SYNOPSIS
.Nm
.Op Fl f Ar format 
.Op Fl p Ar fmt 
.Fl d Ar dbname
.Fl q Ar query
.Op Fl w Ar width
.
.Sh DESCRIPTION
.Nm
executes
.Ar query
on the SQLite database
.Ar dbname .
It produces output suitable for processing with 
.Xr nroff 1
or
.Xr groff 1 ,
complete with
.Ql .TS
and
.Ql .TE , 
for convenient in-terminal viewing or printing.  
.
.Pp
The options are:
.
.Bl -tag -width form
.It Fl d Ar dbname
The name of the SQLite database file.
.It Fl p Ar fmt
.Ar fmt
is a comma-separated key-value pair in the form
.Dq "name,format" ,
where
.Ar name
is the name of a column and
.Ar format
is used as the format string for
.Fn printf 3 .
For example,
.D1 "-p \(dqValue,%'8.2f\(dq"
formats the
.Dq Value
column with 2 digits of precision using the thousands separator
appropriate to the locale.
.Pp
This option can be used to format integer and floating-point values.
To format more than one column, use
.Fl p
multiple times.  
.It Fl q Ar query
The SQL to execute.
.It Fl w Ar width
The width of the table, in inches.  Default is
.Li 6.5 .  
.
.It Fl f Ar format
Any table formatting options, per the
.Xr tbl 1
utility of the
.Xr groff 1
typesetting system.
The
.Ar format
string may consist of any options and column-formatting characters described in
.Sx REFERENCE .
.Pp
If this option is not used, 
.Ar format
defaults to the 
.Ql box;
option and sets
.Li TEXT columns as left-justified
.Li (L) ,
and numeric columns as decimal-aligned
.Li (N) Ns .
.Ar format
is output verbatim, except that a newline is inserted after the semicolon that separates the options from the format characters.  
Any of the options described in the document \(em
center, expand, box, allbox, doublebox, tab(x), linesize(n), and delim(xy)
\(em may be used.  
.El
.
.Pp
Depending on the particular utility,
.Xr man 1
may be a convenient way to display the output of
.Nm .
Experiments by the author with GNU man gave good results if the
.Nm
output was redirected to a file first, and poor results if
.Nm
output was piped into
.Ic man .
In any case, the venerable
.Xr rnoff 1
utility can be used for convenient viewing in the terminal.
See
.Sx EXAMPLES
for ways to use nroff interactively. 
.
.Sh RENDERING
Numeric columns are rendered with a thousands separator if locale is set correctly.  To defeat that feature, set the locale to
.Dq C .
Text columns and column heading are formatted with troff, bracketed with
.Ql T{
and
.Ql T}
(see
.Sx REFERENCE
for details).
The effect is that
.Xr tbl 1
wraps the text at a width of its choosing to create a table that is easy to read. 
Column heading are rendered in boldface.  If
.Ar format
is
.Ql box ,
the column headings are separated from the data by a line.  To get the plainest possible output, pass an empty string as
.Ar format .
.
.Sh EXAMPLES
.Xr nroff 1
produces a
.Dq page
of output, normally causing it to scroll off the screen.  To prevent that, small results can be passed through
.Ic cat
with the
.Fl s
option:
.D1 sqlrpt -d catalog.db -q"select * from T" | nroff -t | cat  -s
.Pp
Larger outputs are more conveniently viewed with GNU
.Ic less ,
which also has a
.Fl s
option to to remove blank lines: 
.D1 sqlrpt -d catalog.db -q"select * from T" | nroff -t | less -s
.Pp
One way to override the locale is to set
.Ev LC_ALL to
.Dq C :
.D1 LC_ALL="C" sqlrpt -d catalog.db -q"select * from T" | nroff -t
.
.Sh REFERENCE
Lesk, M.E.:
.Dq "TBL \(em A Program to Format Tables" .  
.
.Sh SEE ALSO
.Xr groff 1 ,
.Xr groff 7 ,
.Xr tbl 1 ,
.Xr man 1 ,
.Xr sqlite3 1 ,
.
.Sh BUGS
There is no support for BLOB data.  NULL is always represented as
.Ql NULL ;
there is no provision to substitute another string.  Integers are retrieved with
.Fn sqlite3_column_int ,
on 32-bit systems that may sometimes be a limitation. Floating point values are rendered with a simple
.Ql %'f ;
there is no provision to change the format.
.
.Sh MOTIVATION
The popular SQLite interactive shell, while capable of producing output in a variety of formats, is a bit simplistic when rendering a the result as columns. Column names are not included by default, and column widths default to a fixed width.  Columns that would render wider than 10 characters or so, including numeric columns, are truncated in the display.  Very wide character columns make display inconvenient at best.
.Pp
Improving the SQLite shell to deal flexibly with wide columns would be tedious.  Fortunately, though, it's also unnecessary, because
.Xr tbl 1
has all the built-in functionality, including producing Postscript output.   Recent versions of groff can also render PDF directly.
.
.Sh AUTHOR
.Nm
was written by James K. Lowden for the benefit of the SQLite community.  It is published with a standard 3-clause BSD license.  
